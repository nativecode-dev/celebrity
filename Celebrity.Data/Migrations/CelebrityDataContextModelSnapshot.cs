// <auto-generated />

namespace Celebrity.Data.Migrations
{
    using System;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Infrastructure;

    [DbContext(typeof(CelebrityDataContext))]
    internal class CelebrityDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Celebrity.Data.Models.Organization", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<DateTimeOffset>("DateCreated");

                b.Property<DateTimeOffset>("DateModified");

                b.Property<string>("Description");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(128);

                b.Property<string>("Slug")
                    .IsRequired()
                    .HasMaxLength(128);

                b.Property<string>("UserCreated")
                    .HasMaxLength(128);

                b.Property<string>("UserModified")
                    .HasMaxLength(128);

                b.Property<string>("Website")
                    .HasMaxLength(256);

                b.HasKey("Id");

                b.ToTable("Organizations");
            });

            modelBuilder.Entity("Celebrity.Data.Models.OrganizationIdentityUser", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<DateTimeOffset>("DateCreated");

                b.Property<DateTimeOffset>("DateModified");

                b.Property<string>("IdentityUserId");

                b.Property<Guid>("OrganizationId");

                b.Property<string>("UserCreated")
                    .HasMaxLength(128);

                b.Property<string>("UserModified")
                    .HasMaxLength(128);

                b.HasKey("Id");

                b.HasIndex("OrganizationId");

                b.ToTable("OrganizationIdentityUser");
            });

            modelBuilder.Entity("Celebrity.Data.Models.WebHook", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<DateTimeOffset>("DateCreated");

                b.Property<DateTimeOffset>("DateModified");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(128);

                b.Property<Guid>("OrganizationId");

                b.Property<string>("Url")
                    .IsRequired()
                    .HasMaxLength(1024);

                b.Property<string>("UserCreated")
                    .HasMaxLength(128);

                b.Property<string>("UserModified")
                    .HasMaxLength(128);

                b.HasKey("Id");

                b.HasIndex("OrganizationId");

                b.ToTable("WebHooks");
            });

            modelBuilder.Entity("Celebrity.Data.Models.WebHookParameter", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<DateTimeOffset>("DateCreated");

                b.Property<DateTimeOffset>("DateModified");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(128);

                b.Property<string>("UserCreated")
                    .HasMaxLength(128);

                b.Property<string>("UserModified")
                    .HasMaxLength(128);

                b.Property<string>("Value");

                b.Property<Guid>("WebHookId");

                b.HasKey("Id");

                b.HasIndex("WebHookId");

                b.ToTable("WebHookParameter");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
            {
                b.Property<string>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<string>("ConcurrencyStamp");

                b.Property<string>("Name");

                b.Property<string>("NormalizedName");

                b.HasKey("Id");

                b.ToTable("IdentityRoles");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
            {
                b.Property<string>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<int>("AccessFailedCount");

                b.Property<string>("ConcurrencyStamp");

                b.Property<string>("Email");

                b.Property<bool>("EmailConfirmed");

                b.Property<bool>("LockoutEnabled");

                b.Property<DateTimeOffset?>("LockoutEnd");

                b.Property<string>("NormalizedEmail");

                b.Property<string>("NormalizedUserName");

                b.Property<string>("PasswordHash");

                b.Property<string>("PhoneNumber");

                b.Property<bool>("PhoneNumberConfirmed");

                b.Property<string>("SecurityStamp");

                b.Property<bool>("TwoFactorEnabled");

                b.Property<string>("UserName");

                b.HasKey("Id");

                b.ToTable("IdentityUsers");
            });

            modelBuilder.Entity("Celebrity.Data.Models.OrganizationIdentityUser", b =>
            {
                b.HasOne("Celebrity.Data.Models.Organization")
                    .WithMany("Users")
                    .HasForeignKey("OrganizationId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("Celebrity.Data.Models.WebHook", b =>
            {
                b.HasOne("Celebrity.Data.Models.Organization")
                    .WithMany("WebHooks")
                    .HasForeignKey("OrganizationId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("Celebrity.Data.Models.WebHookParameter", b =>
            {
                b.HasOne("Celebrity.Data.Models.WebHook")
                    .WithMany("Parameters")
                    .HasForeignKey("WebHookId")
                    .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}